"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.requestPipelineContextLogger = exports.requestPipelineOtherRequestLogger = exports.requestPipelineServiceRequestLogger = exports.requestPipelineInternalRequestLogger = exports.requestPipelineMockLogger = exports.requestHooksEventProviderLogger = exports.chromeBrowserProviderLogger = exports.resourceInjectorLogger = exports.requestPipelineLogger = exports.nativeAutomationLogger = void 0;
const debug_1 = __importDefault(require("debug"));
const testcafeLogger = (0, debug_1.default)('testcafe');
const nativeAutomationLogger = testcafeLogger.extend('native-automation');
exports.nativeAutomationLogger = nativeAutomationLogger;
const requestPipelineLogger = nativeAutomationLogger.extend('request-pipeline');
exports.requestPipelineLogger = requestPipelineLogger;
const requestPipelineContextLogger = requestPipelineLogger.extend('context');
exports.requestPipelineContextLogger = requestPipelineContextLogger;
const requestPipelineMockLogger = requestPipelineLogger.extend('mock');
exports.requestPipelineMockLogger = requestPipelineMockLogger;
const requestPipelineInternalRequestLogger = requestPipelineLogger.extend('internal-request');
exports.requestPipelineInternalRequestLogger = requestPipelineInternalRequestLogger;
const requestPipelineServiceRequestLogger = requestPipelineLogger.extend('service-request');
exports.requestPipelineServiceRequestLogger = requestPipelineServiceRequestLogger;
const requestPipelineOtherRequestLogger = requestPipelineLogger.extend('other-request');
exports.requestPipelineOtherRequestLogger = requestPipelineOtherRequestLogger;
const resourceInjectorLogger = nativeAutomationLogger.extend('resource-injector');
exports.resourceInjectorLogger = resourceInjectorLogger;
const requestHooksLogger = nativeAutomationLogger.extend('request-hooks');
const requestHooksEventProviderLogger = requestHooksLogger.extend('event-provider');
exports.requestHooksEventProviderLogger = requestHooksEventProviderLogger;
const browserLogger = testcafeLogger.extend('browser');
const browserProviderLogger = browserLogger.extend('provider');
const chromeBrowserProviderLogger = browserProviderLogger.extend('chrome');
exports.chromeBrowserProviderLogger = chromeBrowserProviderLogger;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVidWctbG9nZ2Vycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9kZWJ1Zy1sb2dnZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGtEQUEwQjtBQUUxQixNQUFNLGNBQWMsR0FBRyxJQUFBLGVBQUssRUFBQyxVQUFVLENBQUMsQ0FBQztBQUV6QyxNQUFNLHNCQUFzQixHQUFpQixjQUFjLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFnQnBGLHdEQUFzQjtBQWYxQixNQUFNLHFCQUFxQixHQUFrQixzQkFBc0IsQ0FBQyxNQUFNLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQWdCM0Ysc0RBQXFCO0FBZnpCLE1BQU0sNEJBQTRCLEdBQVcscUJBQXFCLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBdUJqRixvRUFBNEI7QUF0QmhDLE1BQU0seUJBQXlCLEdBQWMscUJBQXFCLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBa0I5RSw4REFBeUI7QUFqQjdCLE1BQU0sb0NBQW9DLEdBQUcscUJBQXFCLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLENBQUM7QUFrQjFGLG9GQUFvQztBQWpCeEMsTUFBTSxtQ0FBbUMsR0FBSSxxQkFBcUIsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztBQWtCekYsa0ZBQW1DO0FBakJ2QyxNQUFNLGlDQUFpQyxHQUFNLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQztBQWtCdkYsOEVBQWlDO0FBakJyQyxNQUFNLHNCQUFzQixHQUFpQixzQkFBc0IsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQVc1Rix3REFBc0I7QUFWMUIsTUFBTSxrQkFBa0IsR0FBcUIsc0JBQXNCLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQzVGLE1BQU0sK0JBQStCLEdBQVEsa0JBQWtCLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUM7QUFXckYsMEVBQStCO0FBVG5DLE1BQU0sYUFBYSxHQUFpQixjQUFjLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3JFLE1BQU0scUJBQXFCLEdBQVMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNyRSxNQUFNLDJCQUEyQixHQUFHLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQU12RSxrRUFBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuXG5jb25zdCB0ZXN0Y2FmZUxvZ2dlciA9IGRlYnVnKCd0ZXN0Y2FmZScpO1xuXG5jb25zdCBuYXRpdmVBdXRvbWF0aW9uTG9nZ2VyICAgICAgICAgICAgICAgPSB0ZXN0Y2FmZUxvZ2dlci5leHRlbmQoJ25hdGl2ZS1hdXRvbWF0aW9uJyk7XG5jb25zdCByZXF1ZXN0UGlwZWxpbmVMb2dnZXIgICAgICAgICAgICAgICAgPSBuYXRpdmVBdXRvbWF0aW9uTG9nZ2VyLmV4dGVuZCgncmVxdWVzdC1waXBlbGluZScpO1xuY29uc3QgcmVxdWVzdFBpcGVsaW5lQ29udGV4dExvZ2dlciAgICAgICAgID0gcmVxdWVzdFBpcGVsaW5lTG9nZ2VyLmV4dGVuZCgnY29udGV4dCcpO1xuY29uc3QgcmVxdWVzdFBpcGVsaW5lTW9ja0xvZ2dlciAgICAgICAgICAgID0gcmVxdWVzdFBpcGVsaW5lTG9nZ2VyLmV4dGVuZCgnbW9jaycpO1xuY29uc3QgcmVxdWVzdFBpcGVsaW5lSW50ZXJuYWxSZXF1ZXN0TG9nZ2VyID0gcmVxdWVzdFBpcGVsaW5lTG9nZ2VyLmV4dGVuZCgnaW50ZXJuYWwtcmVxdWVzdCcpO1xuY29uc3QgcmVxdWVzdFBpcGVsaW5lU2VydmljZVJlcXVlc3RMb2dnZXIgID0gcmVxdWVzdFBpcGVsaW5lTG9nZ2VyLmV4dGVuZCgnc2VydmljZS1yZXF1ZXN0Jyk7XG5jb25zdCByZXF1ZXN0UGlwZWxpbmVPdGhlclJlcXVlc3RMb2dnZXIgICAgPSByZXF1ZXN0UGlwZWxpbmVMb2dnZXIuZXh0ZW5kKCdvdGhlci1yZXF1ZXN0Jyk7XG5jb25zdCByZXNvdXJjZUluamVjdG9yTG9nZ2VyICAgICAgICAgICAgICAgPSBuYXRpdmVBdXRvbWF0aW9uTG9nZ2VyLmV4dGVuZCgncmVzb3VyY2UtaW5qZWN0b3InKTtcbmNvbnN0IHJlcXVlc3RIb29rc0xvZ2dlciAgICAgICAgICAgICAgICAgICA9IG5hdGl2ZUF1dG9tYXRpb25Mb2dnZXIuZXh0ZW5kKCdyZXF1ZXN0LWhvb2tzJyk7XG5jb25zdCByZXF1ZXN0SG9va3NFdmVudFByb3ZpZGVyTG9nZ2VyICAgICAgPSByZXF1ZXN0SG9va3NMb2dnZXIuZXh0ZW5kKCdldmVudC1wcm92aWRlcicpO1xuXG5jb25zdCBicm93c2VyTG9nZ2VyICAgICAgICAgICAgICAgPSB0ZXN0Y2FmZUxvZ2dlci5leHRlbmQoJ2Jyb3dzZXInKTtcbmNvbnN0IGJyb3dzZXJQcm92aWRlckxvZ2dlciAgICAgICA9IGJyb3dzZXJMb2dnZXIuZXh0ZW5kKCdwcm92aWRlcicpO1xuY29uc3QgY2hyb21lQnJvd3NlclByb3ZpZGVyTG9nZ2VyID0gYnJvd3NlclByb3ZpZGVyTG9nZ2VyLmV4dGVuZCgnY2hyb21lJyk7XG5cbmV4cG9ydCB7XG4gICAgbmF0aXZlQXV0b21hdGlvbkxvZ2dlcixcbiAgICByZXF1ZXN0UGlwZWxpbmVMb2dnZXIsXG4gICAgcmVzb3VyY2VJbmplY3RvckxvZ2dlcixcbiAgICBjaHJvbWVCcm93c2VyUHJvdmlkZXJMb2dnZXIsXG4gICAgcmVxdWVzdEhvb2tzRXZlbnRQcm92aWRlckxvZ2dlcixcbiAgICByZXF1ZXN0UGlwZWxpbmVNb2NrTG9nZ2VyLFxuICAgIHJlcXVlc3RQaXBlbGluZUludGVybmFsUmVxdWVzdExvZ2dlcixcbiAgICByZXF1ZXN0UGlwZWxpbmVTZXJ2aWNlUmVxdWVzdExvZ2dlcixcbiAgICByZXF1ZXN0UGlwZWxpbmVPdGhlclJlcXVlc3RMb2dnZXIsXG4gICAgcmVxdWVzdFBpcGVsaW5lQ29udGV4dExvZ2dlcixcbn07XG4iXX0=