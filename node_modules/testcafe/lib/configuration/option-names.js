"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var OptionNames;
(function (OptionNames) {
    OptionNames["src"] = "src";
    OptionNames["browsers"] = "browsers";
    OptionNames["concurrency"] = "concurrency";
    OptionNames["filter"] = "filter";
    OptionNames["filterTestGrep"] = "filter.testGrep";
    OptionNames["filterFixtureGrep"] = "filter.fixtureGrep";
    OptionNames["reporter"] = "reporter";
    OptionNames["ssl"] = "ssl";
    OptionNames["speed"] = "speed";
    OptionNames["screenshots"] = "screenshots";
    OptionNames["screenshotPath"] = "screenshotPath";
    OptionNames["screenshotPathPattern"] = "screenshotPathPattern";
    OptionNames["takeScreenshotsOnFails"] = "takeScreenshotsOnFails";
    OptionNames["proxyBypass"] = "proxyBypass";
    OptionNames["appCommand"] = "appCommand";
    OptionNames["appInitDelay"] = "appInitDelay";
    OptionNames["skipJsErrors"] = "skipJsErrors";
    OptionNames["quarantineMode"] = "quarantineMode";
    OptionNames["debugMode"] = "debugMode";
    OptionNames["debugOnFail"] = "debugOnFail";
    OptionNames["skipUncaughtErrors"] = "skipUncaughtErrors";
    OptionNames["stopOnFirstFail"] = "stopOnFirstFail";
    OptionNames["selectorTimeout"] = "selectorTimeout";
    OptionNames["assertionTimeout"] = "assertionTimeout";
    OptionNames["pageLoadTimeout"] = "pageLoadTimeout";
    OptionNames["browserInitTimeout"] = "browserInitTimeout";
    OptionNames["testExecutionTimeout"] = "testExecutionTimeout";
    OptionNames["runExecutionTimeout"] = "runExecutionTimeout";
    OptionNames["videoPath"] = "videoPath";
    OptionNames["videoOptions"] = "videoOptions";
    OptionNames["videoEncodingOptions"] = "videoEncodingOptions";
    OptionNames["tsConfigPath"] = "tsConfigPath";
    OptionNames["clientScripts"] = "clientScripts";
    OptionNames["requestHooks"] = "requestHooks";
    OptionNames["retryTestPages"] = "retryTestPages";
    OptionNames["hostname"] = "hostname";
    OptionNames["port1"] = "port1";
    OptionNames["port2"] = "port2";
    OptionNames["developmentMode"] = "developmentMode";
    OptionNames["disablePageReloads"] = "disablePageReloads";
    OptionNames["disablePageCaching"] = "disablePageCaching";
    OptionNames["disableScreenshots"] = "disableScreenshots";
    OptionNames["debugLogger"] = "debugLogger";
    OptionNames["disableMultipleWindows"] = "disableMultipleWindows";
    OptionNames["disableHttp2"] = "disableHttp2";
    OptionNames["nativeAutomation"] = "nativeAutomation";
    OptionNames["compilerOptions"] = "compilerOptions";
    OptionNames["pageRequestTimeout"] = "pageRequestTimeout";
    OptionNames["ajaxRequestTimeout"] = "ajaxRequestTimeout";
    OptionNames["cache"] = "cache";
    OptionNames["userVariables"] = "userVariables";
    OptionNames["v8Flags"] = "v8Flags";
    OptionNames["hooks"] = "hooks";
    OptionNames["dashboard"] = "dashboard";
    OptionNames["baseUrl"] = "baseUrl";
    OptionNames["disableCrossDomain"] = "disableCrossDomain";
    OptionNames["esm"] = "esm";
    OptionNames["customActions"] = "customActions";
})(OptionNames || (OptionNames = {}));
exports.default = OptionNames;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3B0aW9uLW5hbWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ3VyYXRpb24vb3B0aW9uLW5hbWVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSyxXQTJESjtBQTNERCxXQUFLLFdBQVc7SUFDWiwwQkFBVyxDQUFBO0lBQ1gsb0NBQXFCLENBQUE7SUFDckIsMENBQTJCLENBQUE7SUFDM0IsZ0NBQWlCLENBQUE7SUFDakIsaURBQWtDLENBQUE7SUFDbEMsdURBQXdDLENBQUE7SUFDeEMsb0NBQXFCLENBQUE7SUFDckIsMEJBQVcsQ0FBQTtJQUNYLDhCQUFlLENBQUE7SUFDZiwwQ0FBMkIsQ0FBQTtJQUMzQixnREFBaUMsQ0FBQTtJQUNqQyw4REFBK0MsQ0FBQTtJQUMvQyxnRUFBaUQsQ0FBQTtJQUNqRCwwQ0FBMkIsQ0FBQTtJQUMzQix3Q0FBeUIsQ0FBQTtJQUN6Qiw0Q0FBNkIsQ0FBQTtJQUM3Qiw0Q0FBNkIsQ0FBQTtJQUM3QixnREFBaUMsQ0FBQTtJQUNqQyxzQ0FBdUIsQ0FBQTtJQUN2QiwwQ0FBMkIsQ0FBQTtJQUMzQix3REFBeUMsQ0FBQTtJQUN6QyxrREFBbUMsQ0FBQTtJQUNuQyxrREFBbUMsQ0FBQTtJQUNuQyxvREFBcUMsQ0FBQTtJQUNyQyxrREFBbUMsQ0FBQTtJQUNuQyx3REFBeUMsQ0FBQTtJQUN6Qyw0REFBNkMsQ0FBQTtJQUM3QywwREFBMkMsQ0FBQTtJQUMzQyxzQ0FBdUIsQ0FBQTtJQUN2Qiw0Q0FBNkIsQ0FBQTtJQUM3Qiw0REFBNkMsQ0FBQTtJQUM3Qyw0Q0FBNkIsQ0FBQTtJQUM3Qiw4Q0FBK0IsQ0FBQTtJQUMvQiw0Q0FBNkIsQ0FBQTtJQUM3QixnREFBaUMsQ0FBQTtJQUNqQyxvQ0FBcUIsQ0FBQTtJQUNyQiw4QkFBZSxDQUFBO0lBQ2YsOEJBQWUsQ0FBQTtJQUNmLGtEQUFtQyxDQUFBO0lBQ25DLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLDBDQUEyQixDQUFBO0lBQzNCLGdFQUFpRCxDQUFBO0lBQ2pELDRDQUE2QixDQUFBO0lBQzdCLG9EQUFxQyxDQUFBO0lBQ3JDLGtEQUFtQyxDQUFBO0lBQ25DLHdEQUF5QyxDQUFBO0lBQ3pDLHdEQUF5QyxDQUFBO0lBQ3pDLDhCQUFlLENBQUE7SUFDZiw4Q0FBK0IsQ0FBQTtJQUMvQixrQ0FBbUIsQ0FBQTtJQUNuQiw4QkFBZSxDQUFBO0lBQ2Ysc0NBQXVCLENBQUE7SUFDdkIsa0NBQW1CLENBQUE7SUFDbkIsd0RBQXlDLENBQUE7SUFDekMsMEJBQVcsQ0FBQTtJQUNYLDhDQUErQixDQUFBO0FBQ25DLENBQUMsRUEzREksV0FBVyxLQUFYLFdBQVcsUUEyRGY7QUFFRCxrQkFBZSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJlbnVtIE9wdGlvbk5hbWVzIHtcbiAgICBzcmMgPSAnc3JjJyxcbiAgICBicm93c2VycyA9ICdicm93c2VycycsXG4gICAgY29uY3VycmVuY3kgPSAnY29uY3VycmVuY3knLFxuICAgIGZpbHRlciA9ICdmaWx0ZXInLFxuICAgIGZpbHRlclRlc3RHcmVwID0gJ2ZpbHRlci50ZXN0R3JlcCcsXG4gICAgZmlsdGVyRml4dHVyZUdyZXAgPSAnZmlsdGVyLmZpeHR1cmVHcmVwJyxcbiAgICByZXBvcnRlciA9ICdyZXBvcnRlcicsXG4gICAgc3NsID0gJ3NzbCcsXG4gICAgc3BlZWQgPSAnc3BlZWQnLFxuICAgIHNjcmVlbnNob3RzID0gJ3NjcmVlbnNob3RzJyxcbiAgICBzY3JlZW5zaG90UGF0aCA9ICdzY3JlZW5zaG90UGF0aCcsXG4gICAgc2NyZWVuc2hvdFBhdGhQYXR0ZXJuID0gJ3NjcmVlbnNob3RQYXRoUGF0dGVybicsXG4gICAgdGFrZVNjcmVlbnNob3RzT25GYWlscyA9ICd0YWtlU2NyZWVuc2hvdHNPbkZhaWxzJyxcbiAgICBwcm94eUJ5cGFzcyA9ICdwcm94eUJ5cGFzcycsXG4gICAgYXBwQ29tbWFuZCA9ICdhcHBDb21tYW5kJyxcbiAgICBhcHBJbml0RGVsYXkgPSAnYXBwSW5pdERlbGF5JyxcbiAgICBza2lwSnNFcnJvcnMgPSAnc2tpcEpzRXJyb3JzJyxcbiAgICBxdWFyYW50aW5lTW9kZSA9ICdxdWFyYW50aW5lTW9kZScsXG4gICAgZGVidWdNb2RlID0gJ2RlYnVnTW9kZScsXG4gICAgZGVidWdPbkZhaWwgPSAnZGVidWdPbkZhaWwnLFxuICAgIHNraXBVbmNhdWdodEVycm9ycyA9ICdza2lwVW5jYXVnaHRFcnJvcnMnLFxuICAgIHN0b3BPbkZpcnN0RmFpbCA9ICdzdG9wT25GaXJzdEZhaWwnLFxuICAgIHNlbGVjdG9yVGltZW91dCA9ICdzZWxlY3RvclRpbWVvdXQnLFxuICAgIGFzc2VydGlvblRpbWVvdXQgPSAnYXNzZXJ0aW9uVGltZW91dCcsXG4gICAgcGFnZUxvYWRUaW1lb3V0ID0gJ3BhZ2VMb2FkVGltZW91dCcsXG4gICAgYnJvd3NlckluaXRUaW1lb3V0ID0gJ2Jyb3dzZXJJbml0VGltZW91dCcsXG4gICAgdGVzdEV4ZWN1dGlvblRpbWVvdXQgPSAndGVzdEV4ZWN1dGlvblRpbWVvdXQnLFxuICAgIHJ1bkV4ZWN1dGlvblRpbWVvdXQgPSAncnVuRXhlY3V0aW9uVGltZW91dCcsXG4gICAgdmlkZW9QYXRoID0gJ3ZpZGVvUGF0aCcsXG4gICAgdmlkZW9PcHRpb25zID0gJ3ZpZGVvT3B0aW9ucycsXG4gICAgdmlkZW9FbmNvZGluZ09wdGlvbnMgPSAndmlkZW9FbmNvZGluZ09wdGlvbnMnLFxuICAgIHRzQ29uZmlnUGF0aCA9ICd0c0NvbmZpZ1BhdGgnLFxuICAgIGNsaWVudFNjcmlwdHMgPSAnY2xpZW50U2NyaXB0cycsXG4gICAgcmVxdWVzdEhvb2tzID0gJ3JlcXVlc3RIb29rcycsXG4gICAgcmV0cnlUZXN0UGFnZXMgPSAncmV0cnlUZXN0UGFnZXMnLFxuICAgIGhvc3RuYW1lID0gJ2hvc3RuYW1lJyxcbiAgICBwb3J0MSA9ICdwb3J0MScsXG4gICAgcG9ydDIgPSAncG9ydDInLFxuICAgIGRldmVsb3BtZW50TW9kZSA9ICdkZXZlbG9wbWVudE1vZGUnLFxuICAgIGRpc2FibGVQYWdlUmVsb2FkcyA9ICdkaXNhYmxlUGFnZVJlbG9hZHMnLFxuICAgIGRpc2FibGVQYWdlQ2FjaGluZyA9ICdkaXNhYmxlUGFnZUNhY2hpbmcnLFxuICAgIGRpc2FibGVTY3JlZW5zaG90cyA9ICdkaXNhYmxlU2NyZWVuc2hvdHMnLFxuICAgIGRlYnVnTG9nZ2VyID0gJ2RlYnVnTG9nZ2VyJyxcbiAgICBkaXNhYmxlTXVsdGlwbGVXaW5kb3dzID0gJ2Rpc2FibGVNdWx0aXBsZVdpbmRvd3MnLFxuICAgIGRpc2FibGVIdHRwMiA9ICdkaXNhYmxlSHR0cDInLFxuICAgIG5hdGl2ZUF1dG9tYXRpb24gPSAnbmF0aXZlQXV0b21hdGlvbicsXG4gICAgY29tcGlsZXJPcHRpb25zID0gJ2NvbXBpbGVyT3B0aW9ucycsXG4gICAgcGFnZVJlcXVlc3RUaW1lb3V0ID0gJ3BhZ2VSZXF1ZXN0VGltZW91dCcsXG4gICAgYWpheFJlcXVlc3RUaW1lb3V0ID0gJ2FqYXhSZXF1ZXN0VGltZW91dCcsXG4gICAgY2FjaGUgPSAnY2FjaGUnLFxuICAgIHVzZXJWYXJpYWJsZXMgPSAndXNlclZhcmlhYmxlcycsXG4gICAgdjhGbGFncyA9ICd2OEZsYWdzJyxcbiAgICBob29rcyA9ICdob29rcycsXG4gICAgZGFzaGJvYXJkID0gJ2Rhc2hib2FyZCcsXG4gICAgYmFzZVVybCA9ICdiYXNlVXJsJyxcbiAgICBkaXNhYmxlQ3Jvc3NEb21haW4gPSAnZGlzYWJsZUNyb3NzRG9tYWluJyxcbiAgICBlc20gPSAnZXNtJyxcbiAgICBjdXN0b21BY3Rpb25zID0gJ2N1c3RvbUFjdGlvbnMnLFxufVxuXG5leHBvcnQgZGVmYXVsdCBPcHRpb25OYW1lcztcbiJdfQ==